{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diya2\\\\novellibrary\\\\novellibrary\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { Link } from \"react-router-dom\";\n\n// export default function Login({ setUser }) {\n//     const [email, setEmail] = useState(\"\");\n//     const [password, setPassword] = useState(\"\");\n//     const [error, setError] = useState(\"\");\n//     const navigate = useNavigate();\n\n//     const handleLogin = async (e) => {\n//         e.preventDefault();\n\n//         try {\n//             const response = await fetch(\"http://localhost:8080/api/auth/login\", {\n//                 method: \"POST\",\n//                 headers: { \"Content-Type\": \"application/json\"},\n//                 body: JSON.stringify({ email, password }),\n//             });\n\n//             if(!response.ok) {\n//                 setError(\"Invalid email or password.\");\n//                 return;\n//             }\n\n//             const user = await response.json();\n//             localStorage.setItem(\"user\", JSON.stringify(user));\n//             setUser(user);\n//             navigate(\"/account\");\n//         } catch (err) {\n//             console.error(err);\n//             setError(\"Login failed. Try again.\")\n//         }\n\n//     };\n\n//     return (\n//         <div className=\"login-page\">\n//             <h2>Login</h2>\n//             <form onSubmit={handleLogin}>\n//                 <input\n//                     type=\"email\"\n//                     placeholder=\"Type in email address....\"\n//                     value={email}\n//                     onChange={(e) => setEmail(e.target.value)}\n//                     required\n//                 />\n//                 <input\n//                     type=\"password\"\n//                     placeholder=\"Type in password....\"\n//                     value={password}\n//                     onChange={(e) => setPassword(e.target.value)}\n//                     required\n//                 />\n//                 <button type=\"submit\">Login</button>\n//             </form>\n//             {error && <p style={{color: \"red\" }}>{error}</p>}\n//             <p>\n//                 Don't have an account? <Link to=\"/register\">Register here</Link>\n//             </p>\n//         </div>\n//     );\n// }  \n\nimport { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login({\n  setUser\n}) {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch(\"http://localhost:8080/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!res.ok) {\n        setError(\"Invalid email or password\");\n        return;\n      }\n      const user = await res.json();\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      setUser(user);\n      navigate(\"/account\");\n    } catch (err) {\n      console.error(err);\n      setError(\"Login failed. Try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don\\u2019t have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Register here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"Ktx5ktSKAplPJrsY5gRTpmAHqe0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useNavigate","Link","jsxDEV","_jsxDEV","Login","setUser","_s","email","setEmail","password","setPassword","error","setError","navigate","handleLogin","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","ok","user","json","localStorage","setItem","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","style","color","to","_c","$RefreshReg$"],"sources":["C:/Users/diya2/novellibrary/novellibrary/frontend/src/components/Login.js"],"sourcesContent":["// import { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// export default function Login({ setUser }) {\r\n//     const [email, setEmail] = useState(\"\");\r\n//     const [password, setPassword] = useState(\"\");\r\n//     const [error, setError] = useState(\"\");\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleLogin = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         try {\r\n//             const response = await fetch(\"http://localhost:8080/api/auth/login\", {\r\n//                 method: \"POST\",\r\n//                 headers: { \"Content-Type\": \"application/json\"},\r\n//                 body: JSON.stringify({ email, password }),\r\n//             });\r\n\r\n//             if(!response.ok) {\r\n//                 setError(\"Invalid email or password.\");\r\n//                 return;\r\n//             }\r\n\r\n//             const user = await response.json();\r\n//             localStorage.setItem(\"user\", JSON.stringify(user));\r\n//             setUser(user);\r\n//             navigate(\"/account\");\r\n//         } catch (err) {\r\n//             console.error(err);\r\n//             setError(\"Login failed. Try again.\")\r\n//         }\r\n        \r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"login-page\">\r\n//             <h2>Login</h2>\r\n//             <form onSubmit={handleLogin}>\r\n//                 <input\r\n//                     type=\"email\"\r\n//                     placeholder=\"Type in email address....\"\r\n//                     value={email}\r\n//                     onChange={(e) => setEmail(e.target.value)}\r\n//                     required\r\n//                 />\r\n//                 <input\r\n//                     type=\"password\"\r\n//                     placeholder=\"Type in password....\"\r\n//                     value={password}\r\n//                     onChange={(e) => setPassword(e.target.value)}\r\n//                     required\r\n//                 />\r\n//                 <button type=\"submit\">Login</button>\r\n//             </form>\r\n//             {error && <p style={{color: \"red\" }}>{error}</p>}\r\n//             <p>\r\n//                 Don't have an account? <Link to=\"/register\">Register here</Link>\r\n//             </p>\r\n//         </div>\r\n//     );\r\n// }  \r\n\r\nimport { useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\nexport default function Login({ setUser }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await fetch(\"http://localhost:8080/api/auth/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      if (!res.ok) {\r\n        setError(\"Invalid email or password\");\r\n        return;\r\n      }\r\n      const user = await res.json();\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n      setUser(user);\r\n      navigate(\"/account\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError(\"Login failed. Try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <p>\r\n        Don’t have an account? <Link to=\"/register\">Register here</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}