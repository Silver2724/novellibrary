{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diya2\\\\novellibrary\\\\novellibrary\\\\frontend\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPassword() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const token = localStorage.getItem(\"token\");\n  const handleReset = async () => {\n    e.preventDefault();\n    try {\n      const res = await fetch(\"http://localhost:8080/api/auth/reset-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          email,\n          newPassword\n        })\n      });\n      const text = await res.text();\n      setMessage(text);\n    } catch (err) {\n      setMessage(\"Error resetting password.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleReset,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter a new password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(ResetPassword, \"3N4giKeqAJsgpr98eZMz3SLzDys=\");\n_c = ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ResetPassword","_s","email","setEmail","newPassword","setNewPassword","message","setMessage","token","localStorage","getItem","handleReset","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","text","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/diya2/novellibrary/novellibrary/frontend/src/components/ResetPassword.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function ResetPassword() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    const handleReset = async () => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const res = await fetch(\"http://localhost:8080/api/auth/reset-password\", {\r\n                method: \"POST\",\r\n                headers: {\"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${token}` },\r\n                body: JSON.stringify({ email, newPassword }),\r\n            });\r\n\r\n            const text = await res.text();\r\n            setMessage(text);\r\n        } catch (err) {\r\n            setMessage(\"Error resetting password.\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Reset Password</h2>\r\n            <form onSubmit={handleReset}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                /> <br />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Enter a new password\"\r\n                    value={newPassword}\r\n                    onChange={(e) => setNewPassword(e.target.value)}\r\n                /> <br />\r\n                <button type=\"submit\">Reset Password</button>\r\n            </form>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}