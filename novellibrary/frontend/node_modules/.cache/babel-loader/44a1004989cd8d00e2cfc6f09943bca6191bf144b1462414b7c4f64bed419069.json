{"ast":null,"code":"import{useEffect,useState}from\"react\";import{useNavigate}from\"react-router-dom\";import SearchBar from\"./SearchBar\";import SearchResults from\"./SearchResults\";import\"./Search.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Search(){const[results,setResults]=useState([]);const[library,setLibrary]=useState([]);const navigate=useNavigate();const token=localStorage.getItem(\"token\");//load user's library on mount\nuseEffect(()=>{const fetchLibrary=async()=>{try{const res=await fetch(\"http://18.118.102.84:8080/api/novels/library\",{method:\"GET\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}});if(!res.ok){throw new Error(\"Library fetch failed: \".concat(res.status));}const data=await res.json();setLibrary(data);}catch(err){console.error(\"Failed to fetch library: \",err);}};if(token)fetchLibrary();},[token,navigate]);//search novels\nconst handleSearch=async query=>{try{var _data$items;const apiKey=process.env.REACT_APP_GOOGLE_BOOKS_API_KEY;// store in .env\nconst res=await fetch(\"https://www.googleapis.com/books/v1/volumes?q=\".concat(encodeURIComponent(query),\"&maxResults=10&key=\").concat(apiKey));if(!res.ok){throw new Error(\"Search failed: \".concat(res.status));}const data=await res.json();setResults(data);const books=((_data$items=data.items)===null||_data$items===void 0?void 0:_data$items.map(item=>{const info=item.volumeInfo||{};return{title:info.title||\"untitled\",author:info.authors||\"Unknown Author(s)\",description:info.description||\"No description available\",sourceURL:info.sourceURL||info.previewLink||\"\"};}))||[];setResults(books);}catch(err){console.error(\"Search failed: \",err);}};const handleSave=async novel=>{try{if(!token)throw new Error(\"No token found, please login\");const res=await fetch(\"http://18.118.102.84:8080/api/novels/library\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)},body:JSON.stringify(novel)});if(!res.ok)throw new Error(\"Failed to save novel.\");const saved=await res.json();console.log(\"Saved to library: \",saved);alert(\"Saved \\\"\".concat(saved.title,\"\\\" to your library!\"));}catch(err){console.error(\"Save failed: \",err);alert(\"Failed to save novel. Please try again.\");}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Search Novels\"}),/*#__PURE__*/_jsx(SearchBar,{onSearch:handleSearch}),/*#__PURE__*/_jsx(SearchResults,{results:results,onSave:handleSave})]});}","map":{"version":3,"names":["useEffect","useState","useNavigate","SearchBar","SearchResults","jsx","_jsx","jsxs","_jsxs","Search","results","setResults","library","setLibrary","navigate","token","localStorage","getItem","fetchLibrary","res","fetch","method","headers","concat","ok","Error","status","data","json","err","console","error","handleSearch","query","_data$items","apiKey","process","env","REACT_APP_GOOGLE_BOOKS_API_KEY","encodeURIComponent","books","items","map","item","info","volumeInfo","title","author","authors","description","sourceURL","previewLink","handleSave","novel","body","JSON","stringify","saved","log","alert","children","className","onSearch","onSave"],"sources":["C:/Users/diya2/novellibrary/novellibrary/frontend/src/components/Search.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport SearchResults from \"./SearchResults\";\r\nimport \"./Search.css\";\r\n\r\nexport default function Search() {\r\n    const[results, setResults] = useState([]);\r\n    const[library, setLibrary] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    //load user's library on mount\r\n    useEffect(() => {\r\n        const fetchLibrary = async () => {\r\n            try {\r\n                const res = await fetch(\"http://18.118.102.84:8080/api/novels/library\", {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`\r\n                },\r\n                });\r\n\r\n                if(!res.ok) {\r\n                    throw new Error(`Library fetch failed: ${res.status}`);\r\n                }\r\n\r\n                const data = await res.json();\r\n                setLibrary(data);\r\n            } catch (err) {\r\n                console.error(\"Failed to fetch library: \", err);\r\n            }\r\n        };\r\n        if(token) fetchLibrary();\r\n    }, [token, navigate]);\r\n\r\n    //search novels\r\n    const handleSearch = async (query) => {\r\n        try {\r\n            const apiKey = process.env.REACT_APP_GOOGLE_BOOKS_API_KEY; // store in .env\r\n            const res = await fetch(\r\n            `https://www.googleapis.com/books/v1/volumes?q=${encodeURIComponent(query)}&maxResults=10&key=${apiKey}`\r\n            );\r\n\r\n            if (!res.ok) {\r\n                throw new Error(`Search failed: ${res.status}`);\r\n            }\r\n            \r\n            const data = await res.json();\r\n            setResults(data);\r\n            const books = data.items?.map(item => {\r\n                const info = item.volumeInfo || {};\r\n                return {\r\n                    title: info.title || \"untitled\",\r\n                    author: info.authors || \"Unknown Author(s)\",\r\n                    description: info.description || \"No description available\",\r\n                    sourceURL:info.sourceURL || info.previewLink || \"\",\r\n                };\r\n            }) || [];\r\n            setResults(books);\r\n        } catch (err) {\r\n            console.error(\"Search failed: \", err)\r\n        }\r\n    };\r\n\r\n    const handleSave = async (novel) => {\r\n        try {\r\n            if (!token) throw new Error(\"No token found, please login\");\r\n\r\n            const res = await fetch(\"http://18.118.102.84:8080/api/novels/library\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify(novel),\r\n            });\r\n\r\n            if (!res.ok) throw new Error(\"Failed to save novel.\");\r\n\r\n            const saved = await res.json();\r\n            console.log(\"Saved to library: \", saved);\r\n\r\n            alert(`Saved \"${saved.title}\" to your library!`);\r\n\r\n        } catch (err) {\r\n            console.error(\"Save failed: \", err);\r\n            alert(\"Failed to save novel. Please try again.\");\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"title\">Search Novels</h1>\r\n            <SearchBar onSearch={handleSearch}/>\r\n            <SearchResults results={results} onSave={handleSave}/>          \r\n        </div>    \r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}