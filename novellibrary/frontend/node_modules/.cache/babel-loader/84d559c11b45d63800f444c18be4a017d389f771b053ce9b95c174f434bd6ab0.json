{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diya2\\\\novellibrary\\\\novellibrary\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { Link } from \"react-router-dom\";\n\n// export default function Login({ setUser }) {\n//     const [email, setEmail] = useState(\"\");\n//     const [password, setPassword] = useState(\"\");\n//     const [error, setError] = useState(\"\");\n//     const navigate = useNavigate();\n\n//     const handleLogin = async (e) => {\n//         e.preventDefault();\n\n//         try {\n//             const response = await fetch(\"http://localhost:8080/api/auth/login\", {\n//                 method: \"POST\",\n//                 headers: { \"Content-Type\": \"application/json\"},\n//                 body: JSON.stringify({ email, password }),\n//             });\n\n//             if(!response.ok) {\n//                 setError(\"Invalid email or password.\");\n//                 return;\n//             }\n\n//             const user = await response.json();\n//             localStorage.setItem(\"user\", JSON.stringify(user));\n//             setUser(user);\n//             navigate(\"/account\");\n//         } catch (err) {\n//             console.error(err);\n//             setError(\"Login failed. Try again.\")\n//         }\n\n//     };\n\n//     return (\n//         <div className=\"login-page\">\n//             <h2>Login</h2>\n//             <form onSubmit={handleLogin}>\n//                 <input\n//                     type=\"email\"\n//                     placeholder=\"Type in email address....\"\n//                     value={email}\n//                     onChange={(e) => setEmail(e.target.value)}\n//                     required\n//                 />\n//                 <input\n//                     type=\"password\"\n//                     placeholder=\"Type in password....\"\n//                     value={password}\n//                     onChange={(e) => setPassword(e.target.value)}\n//                     required\n//                 />\n//                 <button type=\"submit\">Login</button>\n//             </form>\n//             {error && <p style={{color: \"red\" }}>{error}</p>}\n//             <p>\n//                 Don't have an account? <Link to=\"/register\">Register here</Link>\n//             </p>\n//         </div>\n//     );\n// } \n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login({\n  onLogin\n}) {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://localhost:8080/api/auth/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      alert(\"Login successful.\");\n      onLogin(data.id); //pass user ID up to APP\n    } else {\n      alert(data.error || \"Login failed.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type in email address....\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Type in password....\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","onLogin","_s","username","setUsername","password","setPassword","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","id","error","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/diya2/novellibrary/novellibrary/frontend/src/components/Login.js"],"sourcesContent":["// import { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// export default function Login({ setUser }) {\r\n//     const [email, setEmail] = useState(\"\");\r\n//     const [password, setPassword] = useState(\"\");\r\n//     const [error, setError] = useState(\"\");\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleLogin = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         try {\r\n//             const response = await fetch(\"http://localhost:8080/api/auth/login\", {\r\n//                 method: \"POST\",\r\n//                 headers: { \"Content-Type\": \"application/json\"},\r\n//                 body: JSON.stringify({ email, password }),\r\n//             });\r\n\r\n//             if(!response.ok) {\r\n//                 setError(\"Invalid email or password.\");\r\n//                 return;\r\n//             }\r\n\r\n//             const user = await response.json();\r\n//             localStorage.setItem(\"user\", JSON.stringify(user));\r\n//             setUser(user);\r\n//             navigate(\"/account\");\r\n//         } catch (err) {\r\n//             console.error(err);\r\n//             setError(\"Login failed. Try again.\")\r\n//         }\r\n        \r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"login-page\">\r\n//             <h2>Login</h2>\r\n//             <form onSubmit={handleLogin}>\r\n//                 <input\r\n//                     type=\"email\"\r\n//                     placeholder=\"Type in email address....\"\r\n//                     value={email}\r\n//                     onChange={(e) => setEmail(e.target.value)}\r\n//                     required\r\n//                 />\r\n//                 <input\r\n//                     type=\"password\"\r\n//                     placeholder=\"Type in password....\"\r\n//                     value={password}\r\n//                     onChange={(e) => setPassword(e.target.value)}\r\n//                     required\r\n//                 />\r\n//                 <button type=\"submit\">Login</button>\r\n//             </form>\r\n//             {error && <p style={{color: \"red\" }}>{error}</p>}\r\n//             <p>\r\n//                 Don't have an account? <Link to=\"/register\">Register here</Link>\r\n//             </p>\r\n//         </div>\r\n//     );\r\n// } \r\n\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function Login({ onLogin }) {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const response = await fetch(\"http://localhost:8080/api/auth/login\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({ username, password }),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if(response.ok) {\r\n            alert(\"Login successful.\");\r\n            onLogin(data.id); //pass user ID up to APP\r\n        } else {\r\n            alert(data.error || \"Login failed.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Login</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Type in email address....\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <br/>\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Type in password....\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <br />\r\n            <button type=\"submit\">Login</button>                            \r\n        </form>\r\n    );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}