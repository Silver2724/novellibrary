{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diya2\\\\novellibrary\\\\novellibrary\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState} from 'react';\n// import { searchNovels, getLibrary, saveNovel, deleteNovel} from './api';\n// import NavBar from './components/NavBar';\n// import Home from './components/Home';\n// import Search from './components/Search';\n// import SearchBar from './components/SearchBar';\n// import Library from './components/Library';\n// import { Route, Routes } from 'react-router-dom';\n// import Login from './components/Login';\n// import Register from './components/Register';\n// import Account from './components/Account';\n\n// export default function App() {\n//     const [query, setQuery] = useState('');\n//     const [results, setResults] = useState([]);\n//     const [library, setLibrary] = useState([]);\n//     const [user, setUser] = useState(null);\n\n//     // useEffect(() => { \n//     //     const stored = localStorage.getItem(\"user\");\n//     //     if (stored) setUser(JSON.parse(stored));\n//     //  }, []\n//     // );\n\n//     useEffect(() => { refreshLibrary(); }, []);\n\n//     // async function refreshLibrary() {\n//     //     const lib = await getLibrary();\n//     //     setLibrary(lib); \n\n//     async function refreshLibrary() {\n//         const lib = await getLibrary();\n//         setLibrary(lib);        \n//     }\n\n//     async function handleSearch(q) {\n//         setQuery(q);\n//         if(!q) {\n//             setResults([]);\n//             return;\n//         }\n//         const r = await searchNovels(q);\n//         setResults(r);\n//     }\n\n//     async function handleSave(id) {\n//         await saveNovel(id);\n//         await refreshLibrary();        \n//     }\n\n//     async function handleDelete(id) {\n//         await deleteNovel(id);\n//         await refreshLibrary();        \n//     }\n\n//     return (\n//         <div>\n//             <NavBar user={user} setUser={setUser}/>\n//             <div className='contained'>\n//                 <Routes>\n//                     <Route path='/' element={<Home />} />\n//                     <Route path='/search' element={<Search />}/>\n//                     <Route path='/library' element={<Library />} />\n//                     {/* <Route path='/login' element={<Login setUser={setUser} />} />\n//                     <Route path='/register' element={<Register />}/>\n//                     <Route path='/account' element={<Account user={user} />} /> */}\n//                 </Routes>\n//             </div>          \n//         </div>\n//     );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport { searchNovels, getLibrary, saveNovel, deleteNovel } from './api';\nimport NavBar from './components/NavBar';\nimport Home from './components/Home';\nimport Search from './components/Search';\nimport SearchBar from './components/SearchBar';\nimport Library from './components/Library';\nimport { Route, Routes } from 'react-router-dom';\nimport Login from './components/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [library, setLibrary] = useState([]);\n  const [userId, setUserId] = useState(null);\n  /*#__PURE__*/_jsxDEV(Login, {\n    onLogin: id => setUserId(id)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    refreshLibrary();\n  }, []);\n  async function refreshLibrary() {\n    const lib = await getLibrary();\n    setLibrary(lib);\n  }\n  async function handleSearch(q) {\n    setQuery(q);\n    if (!q) {\n      setResults([]);\n      return;\n    }\n    const r = await searchNovels(q);\n    setResults(r);\n  }\n  async function handleSave(id) {\n    await saveNovel(id);\n    await refreshLibrary();\n  }\n  async function handleDelete(id) {\n    await deleteNovel(id);\n    await refreshLibrary();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contained\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/library\",\n          element: /*#__PURE__*/_jsxDEV(Library, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/search\",\n          element: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"s+tI8h0njDbKB3q6fObGEhAsSTc=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","searchNovels","getLibrary","saveNovel","deleteNovel","NavBar","Home","Search","SearchBar","Library","Route","Routes","Login","jsxDEV","_jsxDEV","App","_s","query","setQuery","results","setResults","library","setLibrary","userId","setUserId","onLogin","id","fileName","_jsxFileName","lineNumber","columnNumber","refreshLibrary","lib","handleSearch","q","r","handleSave","handleDelete","children","className","path","element","_c","$RefreshReg$"],"sources":["C:/Users/diya2/novellibrary/novellibrary/frontend/src/App.js"],"sourcesContent":["// import React, { useEffect, useState} from 'react';\r\n// import { searchNovels, getLibrary, saveNovel, deleteNovel} from './api';\r\n// import NavBar from './components/NavBar';\r\n// import Home from './components/Home';\r\n// import Search from './components/Search';\r\n// import SearchBar from './components/SearchBar';\r\n// import Library from './components/Library';\r\n// import { Route, Routes } from 'react-router-dom';\r\n// import Login from './components/Login';\r\n// import Register from './components/Register';\r\n// import Account from './components/Account';\r\n\r\n// export default function App() {\r\n//     const [query, setQuery] = useState('');\r\n//     const [results, setResults] = useState([]);\r\n//     const [library, setLibrary] = useState([]);\r\n//     const [user, setUser] = useState(null);\r\n\r\n//     // useEffect(() => { \r\n//     //     const stored = localStorage.getItem(\"user\");\r\n//     //     if (stored) setUser(JSON.parse(stored));\r\n//     //  }, []\r\n//     // );\r\n\r\n//     useEffect(() => { refreshLibrary(); }, []);\r\n\r\n//     // async function refreshLibrary() {\r\n//     //     const lib = await getLibrary();\r\n//     //     setLibrary(lib); \r\n\r\n//     async function refreshLibrary() {\r\n//         const lib = await getLibrary();\r\n//         setLibrary(lib);        \r\n//     }\r\n\r\n//     async function handleSearch(q) {\r\n//         setQuery(q);\r\n//         if(!q) {\r\n//             setResults([]);\r\n//             return;\r\n//         }\r\n//         const r = await searchNovels(q);\r\n//         setResults(r);\r\n//     }\r\n\r\n//     async function handleSave(id) {\r\n//         await saveNovel(id);\r\n//         await refreshLibrary();        \r\n//     }\r\n\r\n//     async function handleDelete(id) {\r\n//         await deleteNovel(id);\r\n//         await refreshLibrary();        \r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <NavBar user={user} setUser={setUser}/>\r\n//             <div className='contained'>\r\n//                 <Routes>\r\n//                     <Route path='/' element={<Home />} />\r\n//                     <Route path='/search' element={<Search />}/>\r\n//                     <Route path='/library' element={<Library />} />\r\n//                     {/* <Route path='/login' element={<Login setUser={setUser} />} />\r\n//                     <Route path='/register' element={<Register />}/>\r\n//                     <Route path='/account' element={<Account user={user} />} /> */}\r\n//                 </Routes>\r\n//             </div>          \r\n//         </div>\r\n//     );\r\n// }\r\n\r\nimport React, { useEffect, useState} from 'react';\r\nimport { searchNovels, getLibrary, saveNovel, deleteNovel} from './api';\r\nimport NavBar from './components/NavBar';\r\nimport Home from './components/Home';\r\nimport Search from './components/Search';\r\nimport SearchBar from './components/SearchBar';\r\nimport Library from './components/Library';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport Login from './components/Login';\r\n\r\nexport default function App() {\r\n    const [query, setQuery] = useState('');\r\n    const [results, setResults] = useState([]);\r\n    const [library, setLibrary] = useState([]);\r\n    const [userId, setUserId] = useState(null);\r\n\r\n    <Login onLogin={(id) => setUserId(id)} />\r\n\r\n    useEffect(() => { refreshLibrary(); }, []);\r\n\r\n    async function refreshLibrary() {\r\n        const lib = await getLibrary();\r\n        setLibrary(lib);        \r\n    }\r\n\r\n    async function handleSearch(q) {\r\n        setQuery(q);\r\n        if(!q) {\r\n            setResults([]);\r\n            return;\r\n        }\r\n        const r = await searchNovels(q);\r\n        setResults(r);\r\n    }\r\n\r\n    async function handleSave(id) {\r\n        await saveNovel(id);\r\n        await refreshLibrary();        \r\n    }\r\n\r\n    async function handleDelete(id) {\r\n        await deleteNovel(id);\r\n        await refreshLibrary();        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <div className='contained'>\r\n                <Routes>\r\n                    <Route path='/' element={<Home />} />\r\n                    <Route path='/library' element={<Library />}/>\r\n                    <Route path='/search' element={<Search />}/>\r\n                </Routes>\r\n            </div>          \r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}